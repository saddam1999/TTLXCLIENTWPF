<UserControl
	x:Class="TTLX.WindowsTool.Controls.Common.RichTextBoxEditor" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:local="clr-namespace:TTLX.WindowsTool.Controls.Common">
	<FrameworkElement.Resources>
		<ResourceDictionary>
			<Style
				TargetType="{x:Type ToolBar}"
				x:Key="ToolBarStyle1">
				<Setter
					Property="Background"
					Value="#FFEEF5FD" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type ToolBar}">
							<Grid
								Name="Grid"
								SnapsToDevicePixels="True">
								<Grid
									Name="OverflowGrid"
									HorizontalAlignment="Right">
									<ToggleButton
										Name="OverflowButton"
										ClickMode="Press"
										IsEnabled="{TemplateBinding HasOverflowItems}"
										FocusVisualStyle="{x:Null}"
										IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
										<FrameworkElement.Style>
											<Style
												TargetType="{x:Type ToggleButton}">
												<Setter
													Property="Background"
													Value="#FFEEF5FD" />
												<Setter
													Property="MinHeight"
													Value="0" />
												<Setter
													Property="MinWidth"
													Value="0" />
												<Setter
													Property="Template">
													<Setter.Value>
														<ControlTemplate
															TargetType="{x:Type ToggleButton}">
															<Border
																Name="Bd"
																Background="{TemplateBinding Background}"
																SnapsToDevicePixels="True">
																<Canvas
																	HorizontalAlignment="Right"
																	Height="7"
																	Margin="7,2,2,2"
																	SnapsToDevicePixels="True"
																	VerticalAlignment="Bottom"
																	Width="6">
																	<Path
																		Data="M1,1.5 L6,1.5"
																		Stroke="#FFFFFFFF" />
																	<Path
																		Data="M0,0.5 L5,0.5"
																		Stroke="{TemplateBinding Foreground}" />
																	<Path
																		Data="M0.5,4 L6.5,4 L3.5,7"
																		Fill="#FFFFFFFF" />
																	<Path
																		Data="M-0.5,3 L5.5,3 L2.5,6"
																		Fill="{TemplateBinding Foreground}" />
																</Canvas>
															</Border>
															<ControlTemplate.Triggers>
																<Trigger
																	Property="UIElement.IsMouseOver"
																	Value="True">
																	<Setter
																		TargetName="Bd"
																		Property="Background"
																		Value="#210080FF" />
																</Trigger>
																<Trigger
																	Property="UIElement.IsKeyboardFocused"
																	Value="True">
																	<Setter
																		TargetName="Bd"
																		Property="Background"
																		Value="#210080FF" />
																</Trigger>
																<Trigger
																	Property="IsEnabled"
																	Value="False">
																	<Setter
																		Property="Foreground"
																		Value="#FF6D6D6D" />
																</Trigger>
															</ControlTemplate.Triggers>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
												<Style.Triggers>
													<DataTrigger
														Value="true"
														Binding="{Binding}">
														<Setter
															Property="Background"
															Value="{DynamicResource SystemColors.ControlBrushKey}" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</FrameworkElement.Style>
									</ToggleButton>
									<Popup
										Name="OverflowPopup"
										AllowsTransparency="True"
										Focusable="False"
										PopupAnimation="{DynamicResource SystemParameters.ComboBoxPopupAnimationKey}"
										Placement="Bottom"
										StaysOpen="False"
										IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}">
										<Border
											Name="ToolBarSubMenuBorder"
											BorderBrush="#FFB6BDC5"
											BorderThickness="1"
											Background="#FFEEF5FD"
											RenderOptions.ClearTypeHint="Enabled">
											<ToolBarOverflowPanel
												Name="PART_ToolBarOverflowPanel"
												KeyboardNavigation.DirectionalNavigation="Cycle"
												Focusable="True"
												Margin="2"
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
												KeyboardNavigation.TabNavigation="Cycle"
												WrapWidth="200"
												FocusVisualStyle="{x:Null}" />
										</Border>
									</Popup>
								</Grid>
								<Border
									Name="MainPanelBorder"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									Background="{TemplateBinding Background}"
									Padding="{TemplateBinding Padding}">
									<FrameworkElement.Style>
										<Style
											TargetType="{x:Type Border}">
											<Setter
												Property="Margin"
												Value="0,0,11,0" />
											<Style.Triggers>
												<DataTrigger
													Value="true"
													Binding="{Binding}">
													<Setter
														Property="Border.CornerRadius"
														Value="0" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</FrameworkElement.Style>
									<DockPanel
										KeyboardNavigation.TabIndex="1"
										KeyboardNavigation.TabNavigation="Local">
										<Thumb
											Name="ToolBarThumb"
											Margin="-3,-1,0,0"
											Padding="6,5,1,6"
											Width="10">
											<FrameworkElement.Style>
												<Style
													TargetType="{x:Type Thumb}">
													<Setter
														Property="Template">
														<Setter.Value>
															<ControlTemplate
																TargetType="{x:Type Thumb}">
																<Border
																	Background="#00FFFFFF"
																	Padding="{TemplateBinding Padding}"
																	SnapsToDevicePixels="True">
																	<Rectangle>
																		<Shape.Fill>
																			<DrawingBrush
																				TileMode="Tile"
																				Viewbox="0,0,4,4"
																				Viewport="0,0,4,4"
																				ViewportUnits="Absolute"
																				ViewboxUnits="Absolute">
																				<DrawingBrush.Drawing>
																					<DrawingGroup>
																						<GeometryDrawing
																							Brush="#FFFFFFFF"
																							Geometry="M1,1 L1,3 L3,3 L3,1" />
																						<GeometryDrawing
																							Brush="#FF6D6D6D"
																							Geometry="M0,0 L0,2 L2,2 L2,0" />
																					</DrawingGroup>
																				</DrawingBrush.Drawing>
																			</DrawingBrush>
																		</Shape.Fill>
																	</Rectangle>
																</Border>
																<ControlTemplate.Triggers>
																	<Trigger
																		Property="UIElement.IsMouseOver"
																		Value="True">
																		<Setter
																			Property="FrameworkElement.Cursor"
																			Value="SizeAll" />
																	</Trigger>
																</ControlTemplate.Triggers>
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</FrameworkElement.Style>
										</Thumb>
										<ContentPresenter
											Name="ToolBarHeader"
											ContentTemplate="{TemplateBinding HeaderTemplate}"
											Content="{TemplateBinding Header}"
											ContentStringFormat="{TemplateBinding HeaderStringFormat}"
											ContentSource="Header"
											HorizontalAlignment="Center"
											Margin="4,0"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
											VerticalAlignment="Center" />
										<ToolBarPanel
											Name="PART_ToolBarPanel"
											IsItemsHost="True"
											Margin="0,1,2,2"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
									</DockPanel>
								</Border>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger
									Property="ToolBar.IsOverflowOpen"
									Value="True">
									<Setter
										TargetName="ToolBarThumb"
										Property="IsEnabled"
										Value="False" />
								</Trigger>
								<Trigger
									Property="Header"
									Value="{x:Null}">
									<Setter
										TargetName="ToolBarHeader"
										Property="Visibility"
										Value="Collapsed" />
								</Trigger>
								<Trigger
									Property="ToolBarTray.IsLocked"
									Value="True">
									<Setter
										TargetName="ToolBarThumb"
										Property="Visibility"
										Value="Collapsed" />
								</Trigger>
								<Trigger
									Property="ToolBar.Orientation"
									Value="Vertical">
									<Setter
										TargetName="Grid"
										Property="Margin"
										Value="1,3,1,1" />
									<Setter
										TargetName="OverflowButton"
										Property="Style">
										<Setter.Value>
											<Style
												TargetType="{x:Type ToggleButton}">
												<Setter
													Property="Background"
													Value="#FFEEF5FD" />
												<Setter
													Property="MinHeight"
													Value="0" />
												<Setter
													Property="MinWidth"
													Value="0" />
												<Setter
													Property="Template">
													<Setter.Value>
														<ControlTemplate
															TargetType="{x:Type ToggleButton}">
															<Border
																Name="Bd"
																Background="{TemplateBinding Background}"
																CornerRadius="0,0,3,3"
																SnapsToDevicePixels="True">
																<Canvas
																	HorizontalAlignment="Right"
																	Height="6"
																	Margin="2,7,2,2"
																	SnapsToDevicePixels="True"
																	VerticalAlignment="Bottom"
																	Width="7">
																	<Path
																		Data="M1.5,1 L1.5,6"
																		Stroke="#FFFFFFFF" />
																	<Path
																		Data="M0.5,0 L0.5,5"
																		Stroke="{TemplateBinding Foreground}" />
																	<Path
																		Data="M3.5,0.5 L7,3.5 L4,6.5"
																		Fill="#FFFFFFFF" />
																	<Path
																		Data="M3,-0.5 L6,2.5 L3,5.5"
																		Fill="{TemplateBinding Foreground}" />
																</Canvas>
															</Border>
															<ControlTemplate.Triggers>
																<Trigger
																	Property="UIElement.IsMouseOver"
																	Value="True">
																	<Setter
																		TargetName="Bd"
																		Property="Background"
																		Value="#210080FF" />
																</Trigger>
																<Trigger
																	Property="UIElement.IsKeyboardFocused"
																	Value="True">
																	<Setter
																		TargetName="Bd"
																		Property="Background"
																		Value="#210080FF" />
																</Trigger>
																<Trigger
																	Property="IsEnabled"
																	Value="False">
																	<Setter
																		Property="Foreground"
																		Value="#FF6D6D6D" />
																</Trigger>
															</ControlTemplate.Triggers>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
												<Style.Triggers>
													<DataTrigger
														Value="true"
														Binding="{Binding}">
														<Setter
															Property="Background"
															Value="{DynamicResource SystemColors.ControlBrushKey}" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</Setter.Value>
									</Setter>
									<Setter
										TargetName="ToolBarThumb"
										Property="Height"
										Value="10" />
									<Setter
										TargetName="ToolBarThumb"
										Property="Width"
										Value="Auto" />
									<Setter
										TargetName="ToolBarThumb"
										Property="Margin"
										Value="-1,-3,0,0" />
									<Setter
										TargetName="ToolBarThumb"
										Property="Padding"
										Value="5,6,6,1" />
									<Setter
										TargetName="ToolBarHeader"
										Property="Margin"
										Value="0,0,0,4" />
									<Setter
										TargetName="PART_ToolBarPanel"
										Property="Margin"
										Value="1,0,2,2" />
									<Setter
										TargetName="ToolBarThumb"
										Property="Dock"
										Value="Top" />
									<Setter
										TargetName="ToolBarHeader"
										Property="Dock"
										Value="Top" />
									<Setter
										TargetName="OverflowGrid"
										Property="HorizontalAlignment"
										Value="Stretch" />
									<Setter
										TargetName="OverflowGrid"
										Property="VerticalAlignment"
										Value="Bottom" />
									<Setter
										TargetName="OverflowPopup"
										Property="Placement"
										Value="Right" />
									<Setter
										TargetName="MainPanelBorder"
										Property="Margin"
										Value="0,0,0,11" />
									<Setter
										Property="Background"
										Value="#FFEEF5FD" />
								</Trigger>
								<Trigger
									Property="IsEnabled"
									Value="False">
									<Setter
										Value="{DynamicResource SystemColors.GrayTextBrushKey}"
										Property="Foreground" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<DataTrigger
						Value="true"
						Binding="{Binding}">
						<Setter
							Property="Background"
							Value="{DynamicResource SystemColors.ControlBrushKey}" />
					</DataTrigger>
				</Style.Triggers>
			</Style>
		</ResourceDictionary>
	</FrameworkElement.Resources>
	<DockPanel>
		<Border
			DockPanel.Dock="Top"
			BorderThickness="1"
			BorderBrush="#FFD3D3D3">
			<ToolBar
				Style="{DynamicResource ToolBarStyle1}">
				<Button
					Name="XBtnColor"
					Style="{DynamicResource BtnBorderStyle}"
					FontWeight="Normal"
					Height="24"
					Content="标记红色"
					Click="XBtnColor_OnClick" />
				<Separator />
				<ToggleButton
					Name="XBtnBold"
					Height="24"
					Content="加粗"
					Command="EditingCommands.ToggleBold">
					<FrameworkElement.Style>
						<Style
							TargetType="{x:Type ToggleButton}">
							<Setter
								Property="Background"
								Value="#FFFFFFFF" />
							<Setter
								Property="BorderBrush"
								Value="{DynamicResource NormalAccentColor}" />
							<Setter
								Property="BorderThickness"
								Value="1" />
							<Setter
								Property="Foreground"
								Value="{DynamicResource NormalAccentColor}" />
							<Setter
								Property="Padding"
								Value="4,0" />
							<Setter
								Property="FrameworkElement.FocusVisualStyle"
								Value="{x:Null}" />
							<Setter
								Property="Template">
								<Setter.Value>
									<ControlTemplate
										TargetType="{x:Type ToggleButton}">
										<Border
											Name="Bd"
											BorderThickness="{TemplateBinding BorderThickness}"
											BorderBrush="{TemplateBinding BorderBrush}"
											Background="{TemplateBinding Background}">
											<ContentPresenter
												HorizontalAlignment="Center"
												VerticalAlignment="Center"
												Margin="{TemplateBinding Padding}" />
										</Border>
										<ControlTemplate.Triggers>
											<Trigger
												Property="IsPressed"
												Value="True">
												<Setter
													TargetName="Bd"
													Value="{DynamicResource DarkAccentColor}"
													Property="BorderBrush" />
												<Setter
													Value="{DynamicResource DarkAccentColor}"
													Property="Foreground" />
											</Trigger>
											<Trigger
												Property="ToggleButton.IsChecked"
												Value="True">
												<Setter
													TargetName="Bd"
													Value="{DynamicResource DarkAccentColor}"
													Property="BorderBrush" />
												<Setter
													Value="{DynamicResource DarkAccentColor}"
													Property="Foreground" />
												<Setter
													Property="FontWeight"
													Value="Bold" />
											</Trigger>
											<Trigger
												Property="UIElement.IsMouseOver"
												Value="True">
												<Setter
													TargetName="Bd"
													Value="{DynamicResource DarkAccentColor}"
													Property="BorderBrush" />
												<Setter
													Value="{DynamicResource DarkAccentColor}"
													Property="Foreground" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</FrameworkElement.Style>
				</ToggleButton>
				<Separator />
				<ToggleButton
					Name="XBtnItalic"
					Height="24"
					Content="倾斜"
					Command="EditingCommands.ToggleItalic">
					<FrameworkElement.Style>
						<Style
							TargetType="{x:Type ToggleButton}">
							<Setter
								Property="Background"
								Value="#FFFFFFFF" />
							<Setter
								Property="BorderBrush"
								Value="{DynamicResource NormalAccentColor}" />
							<Setter
								Property="BorderThickness"
								Value="1" />
							<Setter
								Property="Foreground"
								Value="{DynamicResource NormalAccentColor}" />
							<Setter
								Property="Padding"
								Value="4,0" />
							<Setter
								Property="FrameworkElement.FocusVisualStyle"
								Value="{x:Null}" />
							<Setter
								Property="Template">
								<Setter.Value>
									<ControlTemplate
										TargetType="{x:Type ToggleButton}">
										<Border
											Name="Bd"
											BorderThickness="{TemplateBinding BorderThickness}"
											BorderBrush="{TemplateBinding BorderBrush}"
											Background="{TemplateBinding Background}">
											<ContentPresenter
												HorizontalAlignment="Center"
												VerticalAlignment="Center"
												Margin="{TemplateBinding Padding}" />
										</Border>
										<ControlTemplate.Triggers>
											<Trigger
												Property="IsPressed"
												Value="True">
												<Setter
													TargetName="Bd"
													Value="{DynamicResource DarkAccentColor}"
													Property="BorderBrush" />
												<Setter
													Value="{DynamicResource DarkAccentColor}"
													Property="Foreground" />
											</Trigger>
											<Trigger
												Property="ToggleButton.IsChecked"
												Value="True">
												<Setter
													TargetName="Bd"
													Value="{DynamicResource DarkAccentColor}"
													Property="BorderBrush" />
												<Setter
													Value="{DynamicResource DarkAccentColor}"
													Property="Foreground" />
												<Setter
													Property="FontStyle"
													Value="Italic" />
											</Trigger>
											<Trigger
												Property="UIElement.IsMouseOver"
												Value="True">
												<Setter
													TargetName="Bd"
													Value="{DynamicResource DarkAccentColor}"
													Property="BorderBrush" />
												<Setter
													Value="{DynamicResource DarkAccentColor}"
													Property="Foreground" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</FrameworkElement.Style>
				</ToggleButton>
				<Separator />
				<ToggleButton
					Name="XBtnUnderline"
					Height="24"
					Content="下划线"
					Command="EditingCommands.ToggleUnderline">
					<FrameworkElement.Style>
						<Style
							TargetType="{x:Type ToggleButton}">
							<Setter
								Property="Background"
								Value="#FFFFFFFF" />
							<Setter
								Property="BorderBrush"
								Value="{DynamicResource NormalAccentColor}" />
							<Setter
								Property="BorderThickness"
								Value="1" />
							<Setter
								Property="Foreground"
								Value="{DynamicResource NormalAccentColor}" />
							<Setter
								Property="Padding"
								Value="4,0" />
							<Setter
								Property="FrameworkElement.FocusVisualStyle"
								Value="{x:Null}" />
							<Setter
								Property="Template">
								<Setter.Value>
									<ControlTemplate
										TargetType="{x:Type ToggleButton}">
										<Border
											Name="Bd"
											BorderThickness="{TemplateBinding BorderThickness}"
											BorderBrush="{TemplateBinding BorderBrush}"
											Background="{TemplateBinding Background}">
											<Grid>
												<ContentPresenter
													HorizontalAlignment="Center"
													VerticalAlignment="Center"
													Margin="{TemplateBinding Padding}" />
												<Rectangle
													Name="XRectUnderline"
													Height="1"
													VerticalAlignment="Bottom"
													Margin="2,0,2,2"
													Fill="{DynamicResource NormalAccentColor}"
													Visibility="Hidden" />
											</Grid>
										</Border>
										<ControlTemplate.Triggers>
											<Trigger
												Property="IsPressed"
												Value="True">
												<Setter
													TargetName="Bd"
													Value="{DynamicResource DarkAccentColor}"
													Property="BorderBrush" />
												<Setter
													Value="{DynamicResource DarkAccentColor}"
													Property="Foreground" />
											</Trigger>
											<Trigger
												Property="ToggleButton.IsChecked"
												Value="True">
												<Setter
													TargetName="Bd"
													Value="{DynamicResource DarkAccentColor}"
													Property="BorderBrush" />
												<Setter
													Value="{DynamicResource DarkAccentColor}"
													Property="Foreground" />
												<Setter
													TargetName="XRectUnderline"
													Property="Visibility"
													Value="Visible" />
											</Trigger>
											<Trigger
												Property="UIElement.IsMouseOver"
												Value="True">
												<Setter
													TargetName="Bd"
													Value="{DynamicResource DarkAccentColor}"
													Property="BorderBrush" />
												<Setter
													Value="{DynamicResource DarkAccentColor}"
													Property="Foreground" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</FrameworkElement.Style>
				</ToggleButton>
				<Separator />
				<ComboBox
					Name="XCmbFontSize"
					Width="60"
					Margin="4,0"
					IsEditable="True"
					TextBoxBase.TextChanged="XCmbFontSize_OnTextChanged" />
				<Separator />
				<ComboBox
					Name="XCmbFontFamily"
					Width="150"
					Margin="4,0"
					Visibility="Hidden"
					SelectionChanged="XCmbFontFamily_OnSelectionChanged" />
			</ToolBar>
		</Border>
		<RichTextBox
			Name="XRtbEditor"
			MinHeight="60"
			Margin="0,-1,0,0"
			SpellCheck.IsEnabled="True"
			Language="en"
			BorderBrush="#FFD3D3D3"
			Padding="4"
			FontSize="15"
			SelectionChanged="XRtbEditer_OnSelectionChanged"
			LostFocus="XRtbEditor_OnLostFocus"
			TextChanged="XRtbEditor_OnTextChanged" />
	</DockPanel>
</UserControl>
